@page "/book"
@inject IServices<Doctor> DoctorService
@inject IServices<Patient> PatientService
@inject IServices<Appointment> AppointmentService
@rendermode InteractiveServer

<h3 class="text-2xl font-bold mb-4">Book or Edit Appointment</h3>

<EditForm Model="@appointment" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-md-6 mb-3">
            <label class="form-label">Select Doctor</label>
            <select class="form-select" @bind="appointment.DoctorId">
                <option value="">-- Choose Doctor --</option>
                @foreach (var doctor in doctors)
                {
                    <option value="@doctor.DoctorId">@doctor.Name (@doctor.Specialization)</option>
                }
            </select>
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Select Patient</label>
            <select class="form-select" @bind="appointment.PatientId">
                <option value="">-- Choose Patient --</option>
                @foreach (var patient in patients)
                {
                    <option value="@patient.PatientId">@patient.Name</option>
                }
            </select>
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Appointment Date</label>
            <input type="date" class="form-control" @bind="appointment.Date" />
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Remarks</label>
            <input type="text" class="form-control" @bind="appointment.Remarks" />
        </div>

        <div class="col-md-4 mb-3">
            <label class="form-label">Appointment ID (for Update)</label>
            <input type="number" class="form-control" @bind="appointment.AppointmentId" />
        </div>
    </div>

    <div class="mt-3 d-flex gap-2">
        <button type="submit" class="btn btn-primary">Book</button>
        <button type="button" class="btn btn-warning" @onclick="UpdateAppointment">Update</button>
        <button type="button" class="btn btn-secondary" @onclick="LoadAppointmentById">Load</button>
    </div>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-success mt-3">@message</div>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private Appointment appointment = new();
    private List<Doctor> doctors = new();
    private List<Patient> patients = new();
    private string? message;
    private string? errorMessage;

    protected override void OnInitialized()
    {
        doctors = DoctorService.GetAll();
        patients = PatientService.GetAll();
    }

    private void HandleValidSubmit()
    {
        try
        {
            AppointmentService.Add(appointment);
            message = "Appointment booked successfully!";
            errorMessage = null;
            appointment = new(); // reset
        }
        catch (Exception ex)
        {
            errorMessage = $"Error booking appointment: {ex.Message}";
            message = null;
        }
    }

    private void UpdateAppointment()
    {
        try
        {
            AppointmentService.Update(appointment);
            message = "Appointment updated successfully!";
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Error updating appointment: {ex.Message}";
            message = null;
        }
    }

    private void LoadAppointmentById()
    {
        try
        {
            var loaded = AppointmentService.GetById(appointment.AppointmentId);
            if (loaded != null)
            {
                appointment = loaded;
                message = "Appointment loaded.";
                errorMessage = null;
            }
            else
            {
                errorMessage = "Appointment not found.";
                message = null;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading appointment: {ex.Message}";
            message = null;
        }
    }
}
